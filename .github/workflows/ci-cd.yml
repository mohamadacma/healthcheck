name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'         
  BUILD_CONFIGURATION: Release

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore dependencies
        working-directory: HealthCheckApi
        run: dotnet restore

      - name: Build application
        working-directory: HealthCheckApi
        run: dotnet build --configuration ${{ env.BUILD_CONFIGURATION }} --no-restore

      - name: Run unit and integration tests
        working-directory: HealthCheckApi
        env:
          ConnectionStrings__DefaultConnection: Host=localhost;Port=5432;Database=testdb;Username=testuser;Password=testpassword
        run: dotnet test --configuration ${{ env.BUILD_CONFIGURATION }} --no-build --verbosity normal --collect:"XPlat Code Coverage"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            **/TestResults/**/*.xml
            **/TestResults/**/*.trx

  deploy-azure:
    runs-on: ubuntu-latest
    needs: build-and-test
    # Only run if pushing to main AND a repo variable toggles deployment
    if: github.ref == 'refs/heads/main' && vars.DEPLOY_TO_APP_SERVICE == 'true'
    env:
      APP_NAME: HealthCheckApi            
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET (publish)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x           

      - name: Publish API
        working-directory: HealthCheckApi
        run: dotnet publish -c Release -o ./publish

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.APP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: HealthCheckApi/publish
